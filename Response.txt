Recursive insertion can work in many different ways but in the case of the code I created it is used to navigate a binary tree. In my code the insert method uses a recursive insertion to find a managers name so employees can be added to there profile. Firstly it starts at the root or the team leader and checks if the current nodeâ€™s name matches any of the managers in the tree. If it does it asks if you want to add the employee to the left or right if there is a slot free then returns true. If the managers name isn't found however it goes through the next manager, then the next one, until it finds the manager or get through all the managers and returns false if unsuccessful. One of the challenges I faced when finding the right spot was trying to make sure the code would work properly when the managers name wasn't found. Trees might be preferable to other data structures when creating something like a file system or a family tree. If you organize this data using an array then it wouldn't be as well organize. Using a tree however will make the data easier to navigate and edit.
